{"version":3,"file":"1-timer.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from \"flatpickr\";\nimport \"flatpickr/dist/flatpickr.min.css\";\nimport iziToast from \"izitoast\";\nimport \"izitoast/dist/css/iziToast.min.css\";\n\n\nconst daysEl = document.querySelector('[data-days]');\nconst hoursEl = document.querySelector('[data-hours]');\nconst minutesEl = document.querySelector('[data-minutes]');\nconst secondsEl = document.querySelector('[data-seconds]');\nconst startBtn = document.querySelector('[data-start]');\nconst dateTimePicker = document.querySelector('#datetime-picker');\n\nlet userSelectedDate = null;\nlet countdownInterval = null;\n\n\nflatpickr(\"#datetime-picker\", {\n  enableTime: true,\n  dateFormat: \"Y-m-d H:i\",\n  time_24hr: true,\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    const selectedDate = selectedDates[0];\n    if (selectedDate <= new Date()) {\n      iziToast.warning({\n        title: \"Warning\",\n        message: \"Please choose a date in the future\",\n        position: \"topRight\",\n      });\n      startBtn.disabled = true;\n      userSelectedDate = null;\n    } else {\n      userSelectedDate = selectedDate;\n      startBtn.disabled = false;\n    }\n  },\n});\n\n\nstartBtn.addEventListener(\"click\", () => {\n  if (!userSelectedDate) return;\n\n  startBtn.disabled = true;\n  dateTimePicker.disabled = true;\n\n  countdownInterval = setInterval(() => {\n    const now = new Date();\n    const diff = userSelectedDate - now;\n\n    if (diff <= 0) {\n      clearInterval(countdownInterval);\n      updateTimer(0);\n      dateTimePicker.disabled = false;\n      startBtn.disabled = true;\n      return;\n    }\n\n    updateTimer(diff);\n  }, 1000);\n});\n\n\nfunction updateTimer(ms) {\n  const { days, hours, minutes, seconds } = convertMs(ms);\n\n  daysEl.textContent = days;\n  hoursEl.textContent = hours;\n  minutesEl.textContent = minutes;\n  secondsEl.textContent = seconds;\n}\n\nfunction convertMs(ms) {\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  const days = Math.floor(ms / day);\n  const hours = Math.floor((ms % day) / hour);\n  const minutes = Math.floor((ms % hour) / minute);\n  const seconds = Math.floor((ms % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n"],"names":["daysEl","hoursEl","minutesEl","secondsEl","startBtn","dateTimePicker","userSelectedDate","countdownInterval","flatpickr","selectedDates","selectedDate","iziToast","diff","updateTimer","ms","days","hours","minutes","seconds","convertMs"],"mappings":"+IAMA,MAAMA,EAAS,SAAS,cAAc,aAAa,EAC7CC,EAAU,SAAS,cAAc,cAAc,EAC/CC,EAAY,SAAS,cAAc,gBAAgB,EACnDC,EAAY,SAAS,cAAc,gBAAgB,EACnDC,EAAW,SAAS,cAAc,cAAc,EAChDC,EAAiB,SAAS,cAAc,kBAAkB,EAEhE,IAAIC,EAAmB,KACnBC,EAAoB,KAGxBC,EAAU,mBAAoB,CAC5B,WAAY,GACZ,WAAY,YACZ,UAAW,GACX,gBAAiB,EACjB,QAAQC,EAAe,CACrB,MAAMC,EAAeD,EAAc,CAAC,EAChCC,GAAgB,IAAI,MACtBC,EAAS,QAAQ,CACf,MAAO,UACP,QAAS,qCACT,SAAU,UAClB,CAAO,EACDP,EAAS,SAAW,GACpBE,EAAmB,OAEnBA,EAAmBI,EACnBN,EAAS,SAAW,GAEvB,CACH,CAAC,EAGDA,EAAS,iBAAiB,QAAS,IAAM,CAClCE,IAELF,EAAS,SAAW,GACpBC,EAAe,SAAW,GAE1BE,EAAoB,YAAY,IAAM,CAEpC,MAAMK,EAAON,EADD,IAAI,KAGhB,GAAIM,GAAQ,EAAG,CACb,cAAcL,CAAiB,EAC/BM,EAAY,CAAC,EACbR,EAAe,SAAW,GAC1BD,EAAS,SAAW,GACpB,MACD,CAEDS,EAAYD,CAAI,CACjB,EAAE,GAAI,EACT,CAAC,EAGD,SAASC,EAAYC,EAAI,CACvB,KAAM,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,GAAYC,EAAUL,CAAE,EAEtDd,EAAO,YAAce,EACrBd,EAAQ,YAAce,EACtBd,EAAU,YAAce,EACxBd,EAAU,YAAce,CAC1B,CAEA,SAASC,EAAUL,EAAI,CAMrB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAC1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EACpCG,EAAU,KAAK,MAAOH,EAAK,KAAQ,GAAM,EACzCI,EAAU,KAAK,MAAOJ,EAAK,IAAU,GAAM,EAEjD,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC"}